import logging
from functools import wraps

from telegram import Update


logger = logging.getLogger(__name__)


def do_default_reply_on_any_error(command_handler):

    @wraps(command_handler)
    async def handle(update: Update, context):
        try:
            return await command_handler(update, context)
        except Exception as e:
            user_id = update.effective_user.id
            username = update.effective_user.username  # may be empty if user have private settings
            logger.error(
                f"Error occurred for user with id {user_id} and username {username}, "
                f"Original error was: {e}"
            )

            message = (
                "–ò–∑–≤–∏–Ω—è—é—Å—å, —è –Ω–µ —Å–º–æ–≥ —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Åüòî\n"
                "–ü—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–π–ª—É—Å—Ç–∞, –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞üôè\n"
                "–ï—Å–ª–∏ —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –≤–µ—Ä–æ—è—Ç–Ω–æ, –≤–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞"
            )
            await update.effective_user.send_message(text=message)

        return

    return handle
